[{"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\index.js":"1","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\App.js":"2","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\reducers\\index.js":"3","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\screens\\LoginScreen.js":"4","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\screens\\ForgotPasswordScree.js":"5","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Home\\Home.js":"6","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Navbar\\Navbar.js":"7","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Upload.js":"8","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\screens\\RegisterScreen.js":"9","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\screens\\ResetPasswordScreen.js":"10","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Payment\\PaystackIntegration.js":"11","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\PostDetails\\PostDetails.jsx":"12","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\CreatorOrTag\\CreatorOrTag.jsx":"13","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\reducers\\auth.js":"14","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\reducers\\posts.js":"15","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Home\\styles.js":"16","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Navbar\\styles.js":"17","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\actions\\posts.js":"18","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Posts\\Posts.js":"19","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\constants\\actionTypes.js":"20","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Form\\Form.js":"21","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\PostDetails\\styles.js":"22","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Pagination.jsx":"23","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Pdf\\Pdf.js":"24","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Posts\\Post\\Post.js":"25","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\PostDetails\\CommentSection.jsx":"26","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\api\\index.js":"27","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Posts\\styles.js":"28","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Form\\styles.js":"29","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\styles.js":"30","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Posts\\Post\\styles.js":"31","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Terms\\Terms.js":"32","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Complete\\complete.js":"33","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Complete\\utils.js":"34","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Complete\\styles.js":"35"},{"size":601,"mtime":1671408681338,"results":"36","hashOfConfig":"37"},{"size":2067,"mtime":1671533642759,"results":"38","hashOfConfig":"37"},{"size":191,"mtime":1671133216596,"results":"39","hashOfConfig":"37"},{"size":2472,"mtime":1671614606430,"results":"40","hashOfConfig":"37"},{"size":1880,"mtime":1671614600095,"results":"41","hashOfConfig":"37"},{"size":3350,"mtime":1671409057348,"results":"42","hashOfConfig":"37"},{"size":2039,"mtime":1671212580338,"results":"43","hashOfConfig":"37"},{"size":277,"mtime":1671131802469,"results":"44","hashOfConfig":"37"},{"size":4175,"mtime":1671614408490,"results":"45","hashOfConfig":"37"},{"size":2643,"mtime":1671614617015,"results":"46","hashOfConfig":"37"},{"size":3470,"mtime":1671533446022,"results":"47","hashOfConfig":"37"},{"size":2587,"mtime":1671133913935,"results":"48","hashOfConfig":"37"},{"size":1396,"mtime":1671131803031,"results":"49","hashOfConfig":"37"},{"size":525,"mtime":1671131805640,"results":"50","hashOfConfig":"37"},{"size":1495,"mtime":1671134022305,"results":"51","hashOfConfig":"37"},{"size":428,"mtime":1671131803375,"results":"52","hashOfConfig":"37"},{"size":1349,"mtime":1671131803546,"results":"53","hashOfConfig":"37"},{"size":2753,"mtime":1671133783186,"results":"54","hashOfConfig":"37"},{"size":814,"mtime":1671408997450,"results":"55","hashOfConfig":"37"},{"size":492,"mtime":1671133952909,"results":"56","hashOfConfig":"37"},{"size":4431,"mtime":1671415874297,"results":"57","hashOfConfig":"37"},{"size":1061,"mtime":1671131804203,"results":"58","hashOfConfig":"37"},{"size":981,"mtime":1671131802391,"results":"59","hashOfConfig":"37"},{"size":1203,"mtime":1671131803843,"results":"60","hashOfConfig":"37"},{"size":3603,"mtime":1671414851998,"results":"61","hashOfConfig":"37"},{"size":1951,"mtime":1671133846091,"results":"62","hashOfConfig":"37"},{"size":1151,"mtime":1671614587146,"results":"63","hashOfConfig":"37"},{"size":1417,"mtime":1671131804374,"results":"64","hashOfConfig":"37"},{"size":448,"mtime":1671131803203,"results":"65","hashOfConfig":"37"},{"size":166,"mtime":1671131802547,"results":"66","hashOfConfig":"37"},{"size":1704,"mtime":1671416685981,"results":"67","hashOfConfig":"37"},{"size":335,"mtime":1671360010513,"results":"68","hashOfConfig":"37"},{"size":1223,"mtime":1671422509492,"results":"69","hashOfConfig":"37"},{"size":883,"mtime":1671422418536,"results":"70","hashOfConfig":"37"},{"size":1180,"mtime":1671422429313,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"2d6997",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\index.js",[],["154","155"],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\App.js",["156"],"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Container from '@mui/material/Container';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\n/* import PostDetails from './components/PostDetails/PostDetails'; */\nimport Navbar from './components/Navbar/Navbar';\nimport Home from './components/Home/Home';\nimport CreatorOrTag from './components/CreatorOrTag/CreatorOrTag';\n import Terms from './components/Terms/Terms'; \nimport LoginScreen from './components/screens/LoginScreen';\nimport RegisterScreen from './components/screens/RegisterScreen';\nimport ForgotPasswordScreen from './components/screens/ForgotPasswordScree';\nimport ResetPasswordScreen from './components/screens/ResetPasswordScreen';\nimport Upload from './components/Upload';\n\n\nconst App = () => {\nconst user = JSON.parse(localStorage.getItem('profile'));\n \n  return (\n    <BrowserRouter>\n      <Container maxWidth=\"xl\">\n        <Navbar />\n        <Routes>\n          <Route path=\"/\"  element={<Navigate to=\"/posts\" replace={true}/> } />\n          <Route path=\"/posts\" exact element={<Home />} />\n          <Route path=\"/uploading\" exact element={<Upload />} />\n          <Route path=\"/posts/search\" exact element={<Home />} />\n      {/*    <Route path=\"/posts/:id\" exact element={<PostDetails />} />  */}\n          <Route path='/tags/:name' exact  element={<CreatorOrTag />} />\n          <Route path='/creators/:name' exact element={<CreatorOrTag />} />\n          <Route path=\"/login\" exact element={(!user ? <LoginScreen /> : <Navigate to=\"/posts\" replace={true}/>)  } />\n       {/*    <Route path=\"/claim\" exact element={<Claim />} /> */}\n         <Route path=\"/termsandconditions\" exact element={<Terms />} /> \n          <Route exact path=\"/register\" element={<RegisterScreen />} />\n          <Route exact path=\"/forgotpassword\"  element={<ForgotPasswordScreen />} />\n          <Route exact path=\"/passwordreset/:resetToken\" element={ <ResetPasswordScreen />} />\n       </Routes>\n      </Container>\n    </BrowserRouter>\n  );\n};\n\nexport default App;","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\reducers\\index.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\screens\\LoginScreen.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\screens\\ForgotPasswordScree.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Home\\Home.js",["157","158","159"],"import React, { useState} from 'react';\nimport Container from '@mui/material/Container';\nimport Grow from '@mui/material/Grow';\nimport Grid from '@mui/material/Grid';\nimport AppBar from '@mui/material/AppBar';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate, useLocation } from 'react-router-dom';\n/* import { MuiChipsInput } from 'mui-chips-input'; */\nimport { getPostsBySearch } from '../../actions/posts';\nimport Posts from '../Posts/Posts';\nimport Pagination from '../Pagination';\nimport useStyles from './styles';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\nconst Home = () => {\n  const { classes } = useStyles();\n  const query = useQuery();\n  const page = query.get('page') || 1;\n  const searchQuery = query.get('searchQuery');\n\n \n\n  const [currentId, setCurrentId] = useState(0);\n  const dispatch = useDispatch();\n\n  const [search, setSearch] = useState('');\n  const [tags, setTags] = useState([]);\n  const navigate = useNavigate();\n\n  const searchPost = () => {\n    if (search.trim() || tags) {\n      dispatch(getPostsBySearch({ search, tags: tags.join(',') }));\n      navigate(`/posts/search?searchQuery=${search || 'none'}&tags=${tags.join(',')}`);\n    } else {\n      navigate('/');\n    }\n  };\n/* \n  useEffect(() => {\n      dispatch(getPostsBySearch(search));\n  },[search]);  */\n\n const handleKeyPress = (e) => {\n    if (e.keyCode === 13) {\n      searchPost();\n    }\n  };  \n\n  const handleAddChip = (tag) => setTags([...tags, tag]);\n\n  const handleDeleteChip = (chipToDelete) => setTags(tags.filter((tag) => tag !== chipToDelete));\n\n  const upload = () => {\n    navigate(\"/uploading\")\n  }\n\n  return (\n    <Grow in>\n      <Container maxWidth=\"xl\">\n        <Grid container justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3} className={classes.gridContainer}>\n          <Grid item xs={12} sm={6} md={9}>\n            <Posts setCurrentId={setCurrentId} />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <AppBar className={classes.appBarSearch} position=\"static\" color=\"inherit\">\n             \n              <TextField \n              onKeyDown={handleKeyPress} \n              name=\"search\" \n              variant=\"outlined\" \n              label=\"Search product\" \n              fullWidth \n              value={search} \n              onChange={(e) => setSearch(e.target.value)} />\n              \n           {/*    <MuiChipsInput\n                style={{ margin: '10px 0' }}\n                value={tags}\n                onAddChip={handleAddChip}\n                onDeleteChip={handleDeleteChip}\n                label=\"Search by tag\"\n                variant=\"outlined\"\n              />  */}\n\n              <Button onClick={searchPost} className={classes.searchButton} variant=\"contained\" color=\"primary\">Search</Button>\n\n        </AppBar>\n        \n        \n\n         <button onClick={upload} >Upload product image</button>\n            {(\n              !searchQuery && !tags.length) && (\n              <Paper className={classes.pagination} elevation={6}>\n                <Pagination page={page} />\n              </Paper>\n            )}\n          </Grid>\n        </Grid>\n      </Container>\n    </Grow>\n  );\n};\n\nexport default Home;","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Navbar\\Navbar.js",["160"],"import React, { useState, useEffect } from 'react';\nimport AppBar  from '@mui/material/AppBar';\nimport Typography from '@mui/material/Typography';\nimport Toolbar  from '@mui/material/Toolbar';\nimport Avatar from '@mui/material/Avatar';\nimport Button  from '@mui/material/Button';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\n\nimport * as actionType from '../../constants/actionTypes';\nimport useStyles from './styles';\n\nconst Navbar = () => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { classes }  = useStyles();\n\n  const logout = () => {\n    dispatch({ type: actionType.LOGOUT });\n\n    navigate('/login');\n\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user?.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem('profile')));\n  }, [location]);\n\n  return (\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n      <Link to=\"/\" className={classes.brandContainer}>\n      <Typography variant='h2' >Seal The Deal</Typography>\n      </Link>\n     <Toolbar className={classes.toolbar}>\n        {user?.result ? (\n          <div className={classes.profile}>\n            <Avatar className={classes.purple} alt={user?.result.username} src={user?.result.imageUrl}>{user?.result.username.charAt(0)}</Avatar>\n            <Typography className={classes.userName} variant=\"h6\">{user?.result.username}</Typography>\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\n          </div>\n        ) : (\n          <Button component={Link} to=\"/login\" variant=\"contained\" color=\"primary\">Login</Button>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Upload.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\screens\\RegisterScreen.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\screens\\ResetPasswordScreen.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Payment\\PaystackIntegration.js",["161"],"import React, {useState} from 'react';\nimport PaystackPop from '@paystack/inline-js';\nimport {  useNavigate } from 'react-router-dom';\n\nconst PaystackIntegration = ({ post }) => {\n  \n       const [firstname, setFirstname ] = useState(\"\");\n       const [lastname, setLastname ] = useState(\"\");\n       const [email, setEmail ] = useState(\"\");\n       const [address, setAddress ] = useState(\"\");\n       const [amount] = useState(post.price * 100);\n       const [product] = useState(post.title);\n       const navigate = useNavigate();\n\n       const pay = (e) => {\n         e.preventDefault();\n         const paystack = new PaystackPop()\n         paystack.newTransaction({\n            key:\"pk_test_6bcfa7fac8e0dcf2a352b04ca4c7d1116bc27f3c\",\n            amount: amount,\n            firstname: firstname,\n            lastname: lastname,\n            email: email, \n            metadata:{\n              \"custom_fields\":[\n                {\n                  \"display_name\":\"Delivery address\",\n                  \"variable_name\":\"Delivery address\",\n                  \"value\":address\n              \n                },\n                {\n                  \"display_name\":\"Name of the product\",\n                  \"variable_name\":\"Name of the product\",\n                  \"value\":product\n              \n                },\n                {\n                  \"display_name\":\"Buyer name\",\n                  \"variable_name\":\"Buyer name\",\n                  \"value\":firstname\n              \n                },\n                {\n                  \"display_name\":\"Buyer name\",\n                  \"variable_name\":\"Buyer name\",\n                  \"value\":lastname\n              \n                },\n                {\n                  \"display_name\":\"Buyer email\",\n                  \"variable_name\":\"Buyer email\",\n                  \"value\":email\n              \n                },\n              \n              ]\n            },\n             onSuccess(transaction) {\n                let message = `Payment Complete! Reference ${transaction.reference}`\n                alert (message)\n                setFirstname(\"\");\n                setLastname(\"\");\n                setEmail(\"\");\n  \n            },\n            onCancel() {\n                alert(\"You have cancelled the transaction\")\n            }\n         })\n       };\n\n  return (\n    <div>\n        <form onSubmit={pay} >\n            <div>\n            <label htmlFor='first-name' >First Name</label>\n            <input type='text' placeholder=\"Enter your first name\" value={firstname} onChange={(e) => setFirstname(e.target.value)} name='firstname' required />\n            </div>\n            <div>\n            <label htmlFor='last-name' >Last Name</label>\n            <input type='text' placeholder='Enter your last name' value={lastname} onChange={(e) => setLastname(e.target.value)} name='lastname' required />\n            </div>\n            <div>\n            <label htmlFor='email' >Email address</label>\n            <input type='email' placeholder='Enter your email address' value={email} onChange={(e) => setEmail(e.target.value)} name='email' required />\n            </div>\n            <div>\n            <label htmlFor='email' >Delivery Address</label>\n            <input type='text' placeholder='Enter your delivery address' value={address} onChange={(e) => setAddress(e.target.value)} name='email' required />\n            </div>\n           <button type=\"submit\">Pay</button>\n        </form>\n    </div>\n  )\n}\n\nexport default PaystackIntegration;","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\PostDetails\\PostDetails.jsx",["162","163","164"],"import React, { useEffect } from 'react';\nimport  Paper from '@mui/material/Paper';\nimport  Typography from '@mui/material/Typography';\nimport  CircularProgress from '@mui/material/CircularProgress';\nimport  Divider from '@mui/material/Divider';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { getPostsBySearch, getPost } from '../../actions/posts';\n/* import CommentSection from './CommentSection'; */\nimport Pdf from '../Pdf/Pdf';\nimport useStyles from './styles';\n\nconst Post = () => {\n  const { post, isLoading } = useSelector((state) => state.posts);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { classes } = useStyles();\n  const { id } = useParams();\n\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id]);\n\n  useEffect(() => {\n    if (post) {\n      dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',') }));\n    }\n  }, [post]);\n\n  if (!post) return null;\n\n  const openPost = (_id) => navigate(`/posts/${_id}`);\n\n  if (isLoading) {\n    return (\n      <Paper elevation={6} className={classes.loadingPaper}>\n        <CircularProgress size=\"7em\" />\n      </Paper>\n    );\n  }\n\nreturn (\n    <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n      <div className={classes.card}>\n        <div className={classes.section}>\n          <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\n          <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography> \n          <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\n          <Typography variant=\"h6\">\n            Created by:\n            <Link to={`/creators/${post.name}`} style={{ textDecoration: 'none', color: '#3f51b5' }}>\n              {` ${post.name}`}\n            </Link>\n          </Typography>\n          <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\n          <Divider style={{ margin: '20px 0' }} />\n          <Divider style={{ margin: '20px 0' }} />\n      {/*    <CommentSection post={post} /> */}\n        \n          \n <Divider style={{ margin: '20px 0' }} />\n        </div>\n      {/*   <div className={classes.imageSection}>\n          <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\n        </div> */}\n      </div>\n     <Pdf />\n</Paper>\n  );\n}; \n\nexport default Post;",["165","166"],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\CreatorOrTag\\CreatorOrTag.jsx",["167"],"import React, { useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport  Typography from '@mui/material/Typography';\nimport  CircularProgress from '@mui/material/CircularProgress';\nimport  Grid  from '@mui/material/Grid';\nimport Divider  from '@mui/material/Divider';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Post from '../Posts/Post/Post';\nimport { getPostsByCreator, getPostsBySearch } from '../../actions/posts';\n\nconst CreatorOrTag = () => {\n  const { name } = useParams();\n  const dispatch = useDispatch();\n  const { posts, isLoading } = useSelector((state) => state.posts);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (location.pathname.startsWith('/tags')) {\n      dispatch(getPostsBySearch({ tags: name }));\n    } else {\n      dispatch(getPostsByCreator(name));\n    }\n  }, []);\n\n  if (!posts.length && !isLoading) return 'No postings';\n\n  return (\n    <div>\n      <Typography variant=\"h2\">{name}</Typography>\n      <Divider style={{ margin: '20px 0 50px 0' }} />\n      {isLoading ? <CircularProgress /> : (\n        <Grid container alignItems=\"stretch\" spacing={3}>\n          {posts?.map((post) => (\n            <Grid key={post._id} item xs={12} sm={12} md={6} lg={3}>\n              <Post post={post} />\n            </Grid>\n          ))}\n        </Grid>\n      )}\n    </div>\n  );\n};\n\nexport default CreatorOrTag;","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\reducers\\auth.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\reducers\\posts.js",["168"],"import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_BY_CREATOR, FETCH_POST, CREATE, UPDATE, DELETE, LIKE} from '../constants/actionTypes';\n\nexport default (state = { isLoading: true, posts: [] }, action) => {\n  switch (action.type) {\n    case 'START_LOADING':\n      return { ...state, isLoading: true };\n    case 'END_LOADING':\n      return { ...state, isLoading: false };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages,\n      };\n    case FETCH_BY_SEARCH:\n    case FETCH_BY_CREATOR:\n      return { ...state, posts: action.payload.data };\n    case FETCH_POST:\n      return { ...state, post: action.payload.post };\n    case LIKE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n   /*  case COMMENT:\n      return {\n        ...state,\n        posts: state.posts.map((post) => {\n          if (post._id === +action.payload._id) {\n            return action.payload;\n          }\n          return post;\n        }),\n      }; */\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload] };\n    case UPDATE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case DELETE:\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\n    default:\n      return state;\n  }\n};\n","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Home\\styles.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\actions\\posts.js",["169"],"import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, RATE, FETCH_BY_CREATOR } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const { data } = await api.fetchPost(id);\n\n    dispatch({ type: FETCH_POST, payload: { post: data } });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data, currentPage, numberOfPages } } = await api.fetchPosts(page);\n\n    dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsByCreator = (name) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchPostsByCreator(name);\n\n    dispatch({ type: FETCH_BY_CREATOR, payload: { data } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n\n    dispatch({ type: FETCH_BY_SEARCH, payload: { data } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createPost = (post, navigate) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n\n    navigate(`/posts/${data._id}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const { data } = await api.likePost(id, user?.token);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/* export const commentPost = (value, id) => async (dispatch) => {\n  try {\n    const { data } = await api.comment(value, id);\n\n    dispatch({ type: COMMENT, payload: data });\n\n    return data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n}; */\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Posts\\Posts.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\constants\\actionTypes.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Form\\Form.js",["170"],"import React, { useState, useEffect } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [checked, setChecked] = React.useState(false);\n  const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '', price: '' });\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const { classes } = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const navigate = useNavigate();\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ title: '', message: '',  selectedFile: '' });\n  };\n\n  useEffect(() => { \n    if (!post?.title) clear();\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost({ ...postData, name: user?.result?.username }));\n      clear();\n      navigate('/posts');\n    } else {\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.username }));\n      clear();\n    }\n};\n\n \n\n  if (!user?.result?.username) {\n    return (\n      <Paper className={classes.paper} elevation={6}>\n        <Typography variant=\"h6\" align=\"center\">\n          Sign in to upload\n        </Typography>\n      </Paper>\n    );\n  }\n\nconst element = <Typography variant='h8'>I agree to the <Box component={Link} to=\"/termsandconditions\">terms and conditions</Box> </Typography>\n\n const handleChange = (event) => {\n  setChecked(event.target.checked);\n};\n\nconst formChange = (e) => {\nsetPostData(prevPostData => {\n  return {\n    ...prevPostData, [e.target.name]: e.target.value\n  }\n})\n};\n\nconst disabled = !checked\n \n  return (\n    <Paper className={classes.paper} elevation={6}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post?.title}\"` : 'Upload your product and set the price'}</Typography>\n       \n       \n        <TextField \n        name=\"title\" \n        variant=\"outlined\" \n        label=\"Name of the product\" \n        value={postData.title} \n        onChange={formChange}\n         />\n        \n      {/*   <TextField \n        name=\"message\" \n        variant=\"outlined\" \n        label=\"Message\" \n        fullWidth\n        multiline \n        minRows={4} \n        value={postData.message} \n        onChange={formChange} \n        /> */}\n      {/*   <div style={{ padding: '5px 0', width: '94%' }}>\n        \n         <TextField\n            name=\"tags\"\n            variant=\"outlined\"\n            label=\"Tags\"\n            fullWidth\n           value={postData.tags}\n           onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} \n              />\n        </div> */}\n\n        <TextField \n        name=\"price\" \n        variant=\"outlined\" \n        label=\"Price\" \n        id=\"price\"\n        value={postData.price} \n        onChange={formChange}\n         />\n       <div className={classes.fileInput}>\n          <FileBase type=\"file\" \n          multiple={false} \n          onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} />\n          </div>\n\n           <FormControlLabel\n            value=\"end\"\n            control={ <Checkbox\n            checked={checked}\n            onChange={handleChange}\n            inputProps={{ 'aria-label': 'controlled' }}\n          /> }\n          label={element}\n          labelPlacement=\"end\"\n        /> \n <Typography variant='h8'> </Typography>\n        <Button className={classes.buttonSubmit} variant=\"contained\" disabled={disabled} color=\"primary\" size=\"large\" type=\"submit\" >Upload</Button>\n      </form>\n  </Paper>\n\n\n  );\n};\n\nexport default Form;\n//  <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\PostDetails\\styles.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Pagination.jsx",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Pdf\\Pdf.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Posts\\Post\\Post.js",["171"],"import React, { useState } from 'react';\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\n/* import CardContent from \"@mui/material/CardContent\"; */\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport ButtonBase from \"@mui/material/ButtonBase\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { deletePost } from '../../../actions/posts';\nimport useStyles from './styles';\nimport PaystackIntegration from '../../Payment/PaystackIntegration';\n\n/* import moment from 'moment'; */\n\n\nconst Post = ({ post, setCurrentId }) => {\nconst user = JSON.parse(localStorage.getItem('profile'));\n  const dispatch = useDispatch();\n  const { classes } = useStyles();\n  const [modal, setModal] = useState(false);\n  \n  \n  const toggleModal = () => {\n    setModal(!modal);\n  };\n\n  if(modal) {\n    document.body.classList.add('active-modal')\n  } else {\n    document.body.classList.remove('active-modal')\n  }\n  \n  return (\n    <Card className={classes.card} raised elevation={6}>\n      <ButtonBase\n        component=\"span\"\n        name=\"test\"\n        className={classes.cardAction}\n      /*   onClick={openPost} */\n      >\n        <CardMedia \n        className={classes.media} \n        image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'}\n        title={post.title} \n        /> \n  \n     {/*  <div className={classes.overlay}>\n          <Typography variant=\"h6\">{post.name}</Typography>\n          <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n        </div> */}\n        {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n        <div className={classes.overlay2} name=\"edit\">\n         {/*  <Button\n            onClick={Edit}\n            style={{ color: 'white' }}\n            size=\"small\"\n          >\n            <MoreHorizIcon fontSize=\"default\" />\n          </Button> */}\n        </div>\n        )}\n        <div className={classes.details}>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n        </div>\n        <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n     {/*    <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message.split(' ').splice(0, 20).join(' ')}...</Typography>\n        </CardContent> */}\n      </ButtonBase>\n    <Typography>R{post.price}</Typography>\n       <CardActions className={classes.cardActions}>\n<button id=\"checkout-button\" onClick={toggleModal} >Buy</button> \n\n<div className={classes.body2}>\n{modal && (\n        <div className={classes.modal}>\n          <div onClick={toggleModal} className={classes.overlay3}></div>\n          <div className={classes.modelcontent}>\n            <h4>Please enter your details</h4>\n            <>\n            <PaystackIntegration post={post} />\n            </>\n          <button className={classes.closemodal} onClick={toggleModal}>\n              CLOSE\n         </button>\n          </div>\n        </div>\n      )}\n</div>\n\n\n\n\n\n\n\n\n\n\n {\n (user?.result?._id === post?.creator) && (\n    <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deletePost(post._id))}>\n      <DeleteIcon fontSize=\"small\" /> &nbsp; Remove\n    </Button>\n  )\n  }\n  </CardActions>\n </Card>\n  );\n}\n\nexport default Post;","C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\PostDetails\\CommentSection.jsx",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\api\\index.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Posts\\styles.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Form\\styles.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\styles.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Posts\\Post\\styles.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Terms\\Terms.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Complete\\complete.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Complete\\utils.js",[],"C:\\Users\\Student\\Downloads\\up_pro-main\\client\\src\\components\\Complete\\styles.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":21},{"ruleId":"176","severity":1,"message":"180","line":28,"column":10,"nodeType":"178","messageId":"179","endLine":28,"endColumn":19},{"ruleId":"176","severity":1,"message":"181","line":54,"column":9,"nodeType":"178","messageId":"179","endLine":54,"endColumn":22},{"ruleId":"176","severity":1,"message":"182","line":56,"column":9,"nodeType":"178","messageId":"179","endLine":56,"endColumn":25},{"ruleId":"183","severity":1,"message":"184","line":39,"column":6,"nodeType":"185","endLine":39,"endColumn":16,"suggestions":"186"},{"ruleId":"176","severity":1,"message":"187","line":13,"column":14,"nodeType":"178","messageId":"179","endLine":13,"endColumn":22},{"ruleId":"183","severity":1,"message":"188","line":23,"column":6,"nodeType":"185","endLine":23,"endColumn":10,"suggestions":"189"},{"ruleId":"183","severity":1,"message":"188","line":29,"column":6,"nodeType":"185","endLine":29,"endColumn":12,"suggestions":"190"},{"ruleId":"176","severity":1,"message":"191","line":33,"column":9,"nodeType":"178","messageId":"179","endLine":33,"endColumn":17},{"ruleId":"172","replacedBy":"192"},{"ruleId":"174","replacedBy":"193"},{"ruleId":"183","severity":1,"message":"194","line":25,"column":6,"nodeType":"185","endLine":25,"endColumn":8,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":3,"column":1,"nodeType":"198","endLine":42,"endColumn":3},{"ruleId":"176","severity":1,"message":"199","line":1,"column":108,"nodeType":"178","messageId":"179","endLine":1,"endColumn":112},{"ruleId":"183","severity":1,"message":"200","line":32,"column":6,"nodeType":"185","endLine":32,"endColumn":12,"suggestions":"201"},{"ruleId":"176","severity":1,"message":"202","line":11,"column":10,"nodeType":"178","messageId":"179","endLine":11,"endColumn":21},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'currentId' is assigned a value but never used.","'handleAddChip' is assigned a value but never used.","'handleDeleteChip' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["205"],"'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["206"],["207"],"'openPost' is assigned a value but never used.",["203"],["204"],"React Hook useEffect has missing dependencies: 'dispatch', 'location.pathname', and 'name'. Either include them or remove the dependency array.",["208"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'RATE' is defined but never used.","React Hook useEffect has a missing dependency: 'clear'. Either include it or remove the dependency array.",["209"],"'useNavigate' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"220","text":"221"},"Update the dependencies array to be: [dispatch, id]",{"range":"222","text":"223"},"Update the dependencies array to be: [dispatch, post]",{"range":"224","text":"225"},"Update the dependencies array to be: [dispatch, location.pathname, name]",{"range":"226","text":"227"},"Update the dependencies array to be: [clear, post]",{"range":"228","text":"229"},[1130,1140],"[location, logout, user?.token]",[853,857],"[dispatch, id]",[990,996],"[dispatch, post]",[859,861],"[dispatch, location.pathname, name]",[1339,1345],"[clear, post]"]